{
  "name": "@job-scraper/worker",
  "version": "0.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "generate-types": "wrangler types",
    "typecheck": "pnpm generate-types && tsc -p tsconfig.json",
    "build": "pnpm openapi:generate && pnpm generate-types && wrangler build",
    "dev": "pnpm migrate:local && wrangler dev",
    "migrate:local": "pnpm wrangler d1 migrations apply DB --local",
    "migrate:remote": "pnpm wrangler d1 migrations apply DB --remote",
    "deploy": "pnpm update:wrangler && pnpm openapi:generate && pnpm build && pnpm migrate:remote && wrangler deploy",
    "update:wrangler": "pnpm add -D wrangler@latest",
    "types": "wrangler types",
    "secret:bulk": "wrangler secret bulk .dev.vars",
    "vectorize:create": "wrangler vectorize create jobs --dimensions=1024 --metric=cosine --preset=@cf/baai/bge-large-en-v1.5",
    "openapi:generate": "node scripts/generate-openapi.js",
    "openapi:serve": "pnpm openapi:generate && wrangler dev",
    "d1:schema:all": "wrangler d1 execute DB --command \"SELECT sql FROM sqlite_master WHERE type IN ('table','index','trigger','view') ORDER BY type, name;\"",
    "d1:schema:tables": "wrangler d1 execute DB --command \"SELECT name FROM sqlite_master WHERE type='table' ORDER BY name;\"",
    "d1:schema:columns": "wrangler d1 execute DB --command \"SELECT m.name AS table_name, p.cid, p.name AS column_name, p.type, p.'notnull', p.dflt_value, p.pk FROM sqlite_master AS m JOIN pragma_table_info(m.name) AS p WHERE m.type='table' ORDER BY m.name, p.cid;\"",
    "d1:schema:dump": "mkdir -p docs/d1_schemas && wrangler d1 execute DB --command \"SELECT sql FROM sqlite_master;\" > docs/d1_schemas/schema_export_$(date -u +%Y-%m-%dT%H:%M:%SZ).sql",
    "test": "vitest",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:watch": "vitest --watch",
    "test:talent-api": "vitest run tests/talent-api.test.ts",
    "test:websocket": "tsx scripts/run-tests-with-websocket.ts",
    "test:websocket:unit": "tsx scripts/run-tests-with-websocket.ts --types unit",
    "test:websocket:integration": "tsx scripts/run-tests-with-websocket.ts --types integration",
    "test:websocket:talent": "tsx scripts/run-tests-with-websocket.ts --types talent",
    "test:websocket:browser": "tsx scripts/run-tests-with-websocket.ts --types browser",
    "test:websocket:e2e": "tsx scripts/run-tests-with-websocket.ts --types e2e",
    "test:websocket:all": "tsx scripts/run-tests-with-websocket.ts --types unit,integration,talent,browser,e2e",
    "setup:export-sa": "node scripts/setup/export-sa-to-dev-vars.js",
    "setup:verify-env": "node scripts/setup/verify-env-vars.js",
    "test:talent": "cd tests && ./run_talent_tests.sh",
    "test:talent:local": "cd tests && ./run_talent_tests.sh --local",
    "test:talent:setup": "cd tests && ./setup_python_tests.sh",
    "test:talent:direct": "cd tests && ./run_talent_tests.sh --direct-only",
    "test:talent:direct:local": "cd tests && ./run_talent_tests.sh --direct-only --local",
    "test:talent:worker": "cd tests && ./run_talent_tests.sh --worker-only",
    "test:talent:worker:local": "cd tests && ./run_talent_tests.sh --worker-only --local",
    "test:browser": "cd tests && ./run_browser_tests.sh",
    "test:browser:local": "cd tests && ./run_browser_tests.sh --local",
    "test:browser:setup": "cd tests && ./setup_python_tests.sh",
    "test:browser-rendering": "node scripts/browser-rendering-example.js",
    "test:linkedin-job": "node -e \"import('./scripts/browser-rendering-example.js').then(m => m.scrapeLinkedInJob(process.argv[1] || '1234567890'))\"",
    "test:browser-testing": "node scripts/test-browser-testing.js"
  },
  "devDependencies": {
    "@cloudflare/puppeteer": "^1.0.4",
    "@types/node": "^20.11.0",
    "@types/uuid": "^9.0.8",
    "@types/ws": "^8.5.10",
    "@vitest/coverage-v8": "^2.1.8",
    "tsx": "^4.7.0",
    "typescript": "^5.4.0",
    "vitest": "^2.1.8",
    "wrangler": "^4.43.0",
    "ws": "^8.16.0"
  },
  "dependencies": {
    "@cloudflare/playwright": "^1.0.0",
    "@hono/zod-validator": "^0.7.4",
    "agents": "^0.2.13",
    "cloudflare": "^5.2.0",
    "hono": "^4.9.12",
    "js-yaml": "^4.1.0",
    "postal-mime": "^2.5.0",
    "uuid": "^9.0.1",
    "zod": "^4.1.12"
  }
}
